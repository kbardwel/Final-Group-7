---
title: "Group assign credit"
output: word_document
editor_options: 
  chunk_output_type: inline
---

```{r}
library(fpp3)
```

load data
```{r}
credit <- read.csv('credit (1).csv')

credit$year_month <- credit$ï..year_month
credit$ï..year_month <- NULL
credit$year_month <- yearmonth(credit$year_month)
```

data time series
```{r}
credit <- as_tsibble(credit, index = year_month)
autoplot(credit, credit_in_millions) + 
  labs(y = "Galactic Credit (in millions)", x = "Year Month Date", title = "Galactic Credit")
```

seasonality & lag
```{r}
gg_season(credit, credit_in_millions)
gg_subseries(credit, credit_in_millions)
gg_lag(credit, credit_in_millions, geom = "point")
credit %>% features(credit_in_millions, feat_acf)
```

splitting data
```{r}
train <- head(credit, nrow(credit) - 12)
test <- tail(credit, 12)
```

```{r}
train %>%
  model(stl = STL(credit_in_millions)) %>%
  components() %>%
  autoplot()
```

model selection
```{r}
fit <- train %>%
  stretch_tsibble(.init = 24, .step = 20) %>%
  model(
    arima = ARIMA(credit_in_millions, stepwise = FALSE),
    ets = ETS(credit_in_millions),
    nnet = NNETAR(credit_in_millions),
    tslm = TSLM(credit_in_millions ~ trend()),
    tslmseason = TSLM(credit_in_millions ~ trend() + season())
  )

fit %>%
  forecast(h = 12, times = 200) %>%
  accuracy(credit) %>%
  arrange(RMSE)
```

lag model code
```{r}
# creditlag <- credit %>%
# mutate(lag1 = lag(credit_in_millions, 1))
# 
# trainlag <- head(creditlag, nrow(credit) - 12)
# testlag <- tail(creditlag, 12)
# 
# #credit$lag1 <- creditlag$lag1
# 
# fit <- trainlag %>%
# model(
# tslmlag = TSLM(credit_in_millions ~ lag1),
# tslm = TSLM(credit_in_millions ~ trend()),
# tslmlagtrend = TSLM(credit_in_millions ~ trend() + lag1),
# arima = ARIMA(credit_in_millions),
# ets = ETS(credit_in_millions)
# )
# 
# report(fit) %>%
# arrange(AIC)
# 
# 
# fit %>%
# forecast(h = 12, times = 200) %>%
# accuracy(credit)
# credit
# 
# fit <- fit %>%
# select(tslmlagtrend)
# 
# fit %>%
# forecast(testlag, times = 100) %>%
# autoplot(testlag)
```

Best model
```{r}
fit <- train %>% 
  model(ARIMA(credit_in_millions, stepwise = FALSE))

report(fit)

gg_tsresiduals(fit)
```

Forecasting of best model
```{r}
fit %>% 
  forecast(test, times = 100) %>% 
  autoplot(test) +
  labs(title = "12 Month Forecast", y = "Galactic Credit (in millions)", x = "Year Month Date")

fit %>% 
  forecast(test, times = 100) %>% 
  autoplot(credit)
```

Accuracy 
```{r}
predictions <- fit %>% 
  forecast(test, times = 100)

y_pred <- predictions$.mean

rmse <- function(y_actual, y_pred) {
  sqrt(mean((y_actual - y_pred)^2))
}

mape <- function(y_actual, y_pred) {
  mean(abs(y_actual - y_pred) / y_actual)
}

rmse(y_pred, test$credit_in_millions)
mape(y_pred, test$credit_in_millions)

```

```{r}
fit <- credit %>% 
  model(ARIMA(credit_in_millions, stepwise = FALSE))

prediction <- fit %>% 
  forecast(h =12)

prediction$.mean

write.csv(prediction$.mean, "predictions.csv", row.names = FALSE)

```

